version: '3.8'

services:
  fastapi:
    build:
      context: ./app-store-api
      dockerfile: Dockerfile
    container_name: fastapi
    ports:
      - "8000:8040"
    volumes:
      - ./app-store-api:/app
    environment:
      - MODULE_NAME=app.main
      - VARIABLE_NAME=app
      - PORT=80
      - DATABASE_URL=postgresql://postgres:sql123@db:5432/postgres
      - MONGO_URL=mongodb://mongo:27017/app-store
      - SECRET_KEY=1234567890


  react:
    image: node:14
    container_name: react
    working_dir: /app
    volumes:
      - ./app-store:/app
    command: sh -c "npm install && npm start"
    ports:
      - "3000:3000"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - fastapi
      - react

  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sql123
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # mongo:
  #   image: mongo:latest
  #   container_name: mongo
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db

  alembic:
    image: python:3.10
    container_name: alembic
    working_dir: /app
    volumes:
      - ./app-store-api:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://postgres:sql123@db:5432/postgres
    command: sh -c "pip install -r requirements.txt && alembic upgrade head"
    depends_on:
      - db

  # mongo_migrate:
  #   image: python:3.10
  #   container_name: mongo_migrate
  #   working_dir: /app
  #   volumes:
  #     - ./app-store-api:/app
  #   environment:
  #     - PYTHONPATH=/app
  #     - MONGO_URL=mongodb://mongo:27017/app-store
  #   command: sh -c "echo 'Installing requirements...' && pip install -r requirements.txt && echo 'Running migrations...' && pymongo-migrate migrate -c pymongo_migrate_config.py && echo 'Migrations completed.'"
  #   depends_on:
  #     - mongo

volumes:
  postgres_data:
  mongo_data: